/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface CwsButton {
    /**
    * Autofocus state
    */
    'autofocus': boolean;
    /**
    * Disabled state, not applicable if the component receive the `href` prop
    */
    'disabled': boolean;
    /**
    * href to redirect user. It render an anchor tag (`<a></a>`) instead of a button one
    */
    'href'?: string;
    /**
    * Button size
    */
    'size': 'lg' | 'md' | 'sm';
    /**
    * Button type, not applicable if the component receive `href` prop
    */
    'type': 'button' | 'submit' | 'reset';
    /**
    * Button style
    */
    'variant': 'primary' | 'secondary';
  }
  interface CwsFieldSelect {
    /**
    * Input disabled prop
    */
    'disabled': boolean;
    /**
    * Input error prop
    */
    'error': boolean;
    /**
    * Input helper message
    */
    'hint'?: string;
    /**
    * Expected an array to populate select
    */
    'items': any[];
    /**
    * Input label prop
    */
    'label': string;
    /**
    * Input name prop
    */
    'name': string;
    /**
    * Input required prop
    */
    'required': boolean;
    /**
    * Input value
    */
    'value': string;
  }
  interface CwsFieldText {
    /**
    * Input disabled state
    */
    'disabled': boolean;
    /**
    * Input error state
    */
    'error': boolean;
    /**
    * Input hint message
    */
    'hint'?: string;
    /**
    * Input label
    */
    'label': string;
    /**
    * Input name
    */
    'name': string;
    /**
    * Input required state
    */
    'required': boolean;
    /**
    * Input type
    */
    'type': 'text' | 'password' | 'email';
    /**
    * Input initial value
    */
    'value': string;
  }
  interface CwsIcon {
    /**
    * Icon slug
    */
    'icon'?: string;
    /**
    * Icon size
    */
    'size'?: 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  }
}

declare global {


  interface HTMLCwsButtonElement extends Components.CwsButton, HTMLStencilElement {}
  var HTMLCwsButtonElement: {
    prototype: HTMLCwsButtonElement;
    new (): HTMLCwsButtonElement;
  };

  interface HTMLCwsFieldSelectElement extends Components.CwsFieldSelect, HTMLStencilElement {}
  var HTMLCwsFieldSelectElement: {
    prototype: HTMLCwsFieldSelectElement;
    new (): HTMLCwsFieldSelectElement;
  };

  interface HTMLCwsFieldTextElement extends Components.CwsFieldText, HTMLStencilElement {}
  var HTMLCwsFieldTextElement: {
    prototype: HTMLCwsFieldTextElement;
    new (): HTMLCwsFieldTextElement;
  };

  interface HTMLCwsIconElement extends Components.CwsIcon, HTMLStencilElement {}
  var HTMLCwsIconElement: {
    prototype: HTMLCwsIconElement;
    new (): HTMLCwsIconElement;
  };
  interface HTMLElementTagNameMap {
    'cws-button': HTMLCwsButtonElement;
    'cws-field-select': HTMLCwsFieldSelectElement;
    'cws-field-text': HTMLCwsFieldTextElement;
    'cws-icon': HTMLCwsIconElement;
  }
}

declare namespace LocalJSX {
  interface CwsButton extends JSXBase.HTMLAttributes<HTMLCwsButtonElement> {
    /**
    * Autofocus state
    */
    'autofocus'?: boolean;
    /**
    * Disabled state, not applicable if the component receive the `href` prop
    */
    'disabled'?: boolean;
    /**
    * href to redirect user. It render an anchor tag (`<a></a>`) instead of a button one
    */
    'href'?: string;
    /**
    * Button size
    */
    'size'?: 'lg' | 'md' | 'sm';
    /**
    * Button type, not applicable if the component receive `href` prop
    */
    'type'?: 'button' | 'submit' | 'reset';
    /**
    * Button style
    */
    'variant'?: 'primary' | 'secondary';
  }
  interface CwsFieldSelect extends JSXBase.HTMLAttributes<HTMLCwsFieldSelectElement> {
    /**
    * Input disabled prop
    */
    'disabled'?: boolean;
    /**
    * Input error prop
    */
    'error'?: boolean;
    /**
    * Input helper message
    */
    'hint'?: string;
    /**
    * Expected an array to populate select
    */
    'items'?: any[];
    /**
    * Input label prop
    */
    'label'?: string;
    /**
    * Input name prop
    */
    'name'?: string;
    /**
    * Input required prop
    */
    'required'?: boolean;
    /**
    * Input value
    */
    'value'?: string;
  }
  interface CwsFieldText extends JSXBase.HTMLAttributes<HTMLCwsFieldTextElement> {
    /**
    * Input disabled state
    */
    'disabled'?: boolean;
    /**
    * Input error state
    */
    'error'?: boolean;
    /**
    * Input hint message
    */
    'hint'?: string;
    /**
    * Input label
    */
    'label'?: string;
    /**
    * Input name
    */
    'name'?: string;
    /**
    * Input required state
    */
    'required'?: boolean;
    /**
    * Input type
    */
    'type'?: 'text' | 'password' | 'email';
    /**
    * Input initial value
    */
    'value'?: string;
  }
  interface CwsIcon extends JSXBase.HTMLAttributes<HTMLCwsIconElement> {
    /**
    * Icon slug
    */
    'icon'?: string;
    /**
    * Icon size
    */
    'size'?: 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  }

  interface IntrinsicElements {
    'cws-button': CwsButton;
    'cws-field-select': CwsFieldSelect;
    'cws-field-text': CwsFieldText;
    'cws-icon': CwsIcon;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


